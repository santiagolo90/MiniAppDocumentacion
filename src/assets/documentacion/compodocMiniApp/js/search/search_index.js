var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/injectables/ProviderUnoProvider.html",[0,0.299,1,0.56]],["body/injectables/ProviderUnoProvider.html",[0,0.276,1,0.602,2,0.625,3,0.625,4,0.395,5,1.17,6,1.17,7,0.395,8,1.717,9,1.548,10,1.548,11,2.349,12,2.305,13,1.548,14,1.037,15,1.852,16,2.808,17,0.395,18,1.037,19,2.423,20,1.852,21,1.037,22,1.037,23,1.037,24,1.037,25,1.548,26,1.037,27,0.188,28,1.037,29,1.717,30,0.625,31,1.037,32,1.548,33,2.197,34,1.508,35,1.548,36,1.548,37,1.33,38,2.197,39,0.625,40,2.349,41,2.197,42,1.037,43,1.037,44,1.548,45,2.054,46,1.548,47,2.305,48,2.455,49,2.255,50,2.054,51,1.037,52,0.625,53,0.625,54,1.037,55,1.037,56,1.037,57,1.037,58,1.037,59,2.054,60,1.548,61,1.037,62,0.625,63,0.625,64,1.037,65,1.037,66,1.037,67,0.625,68,0.625,69,1.037,70,1.037,71,1.037,72,1.037,73,1.037,74,1.037,75,0.625,76,1.717,77,0.395,78,0.625,79,1.548,80,1.33,81,1.33,82,1.717,83,0.625,84,0.625,85,0.395,86,1.037,87,0.625,88,0.625,89,0.625,90,0.625,91,0.625,92,0.625,93,0.625,94,0.625,95,0.625,96,1.852,97,0.625,98,0.625,99,0.625,100,0.625,101,0.625,102,0.625,103,0.625,104,0.625,105,0.625,106,1.037,107,1.037,108,0.625,109,0.625,110,0.625,111,0.625,112,1.037,113,0.625,114,0.625,115,0.625,116,0.625,117,0.625,118,0.625,119,0.065,120,0.065]],["title/coverage.html",[121,1.235]],["body/coverage.html",[0,0.442,1,0.828,4,1.345,5,1.345,6,1.345,7,1.345,27,0.167,77,1.345,119,0.157,120,0.157,121,1.345,122,2.129,123,2.129,124,2.129,125,2.129,126,2.129,127,2.129,128,2.129,129,2.129]],["title/dependencies.html",[130,1.207,131,1.092]],["body/dependencies.html",[27,0.185,34,0.965,85,0.965,119,0.128,120,0.128,131,0.965,132,1.528,133,2.746,134,1.528,135,2.036,136,1.528,137,1.528,138,1.528,139,2.036,140,2.29,141,1.528,142,2.67,143,1.528,144,2.29,145,1.528,146,1.528,147,1.528,148,1.528,149,1.528,150,1.528,151,1.528,152,1.528,153,1.528,154,1.528,155,1.528,156,1.528,157,2.67,158,1.528,159,1.528,160,2.616,161,1.528,162,1.528,163,1.528,164,2.036,165,1.528,166,1.528,167,1.528,168,1.528,169,1.528,170,1.528,171,1.528,172,1.528,173,1.528,174,1.528,175,1.528,176,1.528,177,1.528,178,1.528,179,1.528,180,1.528,181,1.528,182,1.528,183,1.528]],["title/index.html",[17,0.909,184,0.909]],["body/index.html",[0,0.468,27,0.163,119,0.163,120,0.163,184,1.425,185,2.256]],["title/modules.html",[186,1.235]],["body/modules.html",[27,0.164,119,0.164,120,0.164,186,1.437]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["0.8.26",{"_index":183,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":185,"title":{},"body":{"index.html":{}}}],["1.1.19",{"_index":168,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":125,"title":{},"body":{"coverage.html":{}}}],["2.0.2",{"_index":162,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":166,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":153,"title":{},"body":{"dependencies.html":{}}}],["3.0.0",{"_index":164,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["3.9.2",{"_index":175,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":144,"title":{},"body":{"dependencies.html":{}}}],["4.9.0",{"_index":147,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":155,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":170,"title":{},"body":{"dependencies.html":{}}}],["5.2.11",{"_index":133,"title":{},"body":{"dependencies.html":{}}}],["5.5.11",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":126,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":159,"title":{},"body":{"dependencies.html":{}}}],["actualiza",{"_index":31,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["actualizarusuario",{"_index":22,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["actualizarusuario(usuario",{"_index":26,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["aleatoria",{"_index":66,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["android",{"_index":158,"title":{},"body":{"dependencies.html":{}}}],["angular",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["angular/anim",{"_index":132,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":134,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":84,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["angular/compil",{"_index":135,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":85,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"dependencies.html":{}}}],["angular/form",{"_index":137,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":138,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":139,"title":{},"body":{"dependencies.html":{}}}],["angularfire2",{"_index":154,"title":{},"body":{"dependencies.html":{}}}],["angularfire2/databas",{"_index":87,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["angularfiredatabas",{"_index":86,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["apellido",{"_index":49,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["apellido&quot",{"_index":75,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["app",{"_index":146,"title":{},"body":{"dependencies.html":{}}}],["bar",{"_index":151,"title":{},"body":{"dependencies.html":{}}}],["browser",{"_index":140,"title":{},"body":{"dependencies.html":{}}}],["catch(err",{"_index":112,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["clase",{"_index":46,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["class",{"_index":95,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["cli",{"_index":136,"title":{},"body":{"dependencies.html":{}}}],["coincida",{"_index":56,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["como",{"_index":41,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["con",{"_index":57,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["console.log(\"no",{"_index":116,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["constructor(publ",{"_index":98,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["cordova",{"_index":157,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":121,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["databas",{"_index":99,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["databaserefer",{"_index":76,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["dato",{"_index":38,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["de",{"_index":45,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["defin",{"_index":29,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["del",{"_index":48,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["depend",{"_index":131,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["descript",{"_index":8,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["devic",{"_index":161,"title":{},"body":{"dependencies.html":{}}}],["devuelv",{"_index":69,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["document",{"_index":122,"title":{},"body":{"coverage.html":{}}}],["dynam",{"_index":141,"title":{},"body":{"dependencies.html":{}}}],["el",{"_index":55,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["elimina",{"_index":54,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["eliminar",{"_index":23,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["eliminar(key",{"_index":52,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["eliminar(key):promis",{"_index":114,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["elimino",{"_index":117,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["en",{"_index":33,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["exampl",{"_index":40,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["export",{"_index":94,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{}}}],["firebas",{"_index":34,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"dependencies.html":{}}}],["gt",{"_index":44,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["guarda",{"_index":64,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["guardar/eliminar/actualizar",{"_index":14,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["guardarusuario",{"_index":24,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["guardarusuario(usuario",{"_index":62,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["guardarusuario(usuario):promiselik",{"_index":101,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["homepag",{"_index":88,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["httpclient",{"_index":83,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["id",{"_index":60,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["identifi",{"_index":123,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":97,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["import",{"_index":82,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["inappbrows",{"_index":163,"title":{},"body":{"dependencies.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"injectables/ProviderUnoProvider.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["inject",{"_index":0,"title":{"injectables/ProviderUnoProvider.html":{}},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{},"index.html":{}}}],["instancia",{"_index":107,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["ionic",{"_index":142,"title":{},"body":{"dependencies.html":{}}}],["ionic/storag",{"_index":152,"title":{},"body":{"dependencies.html":{}}}],["ionicon",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":59,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["keyboard",{"_index":165,"title":{},"body":{"dependencies.html":{}}}],["la",{"_index":58,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["lo",{"_index":71,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["match",{"_index":120,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["method",{"_index":21,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["modul",{"_index":186,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["msj",{"_index":118,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["name",{"_index":36,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["native/cor",{"_index":143,"title":{},"body":{"dependencies.html":{}}}],["native/in",{"_index":145,"title":{},"body":{"dependencies.html":{}}}],["native/splash",{"_index":148,"title":{},"body":{"dependencies.html":{}}}],["native/statu",{"_index":150,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":127,"title":{},"body":{"coverage.html":{}}}],["nombr",{"_index":47,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["obj",{"_index":109,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["obj[usuario.key",{"_index":110,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["obtenerusuario",{"_index":25,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["option",{"_index":37,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["overview",{"_index":184,"title":{"index.html":{}},"body":{"index.html":{}}}],["packag",{"_index":130,"title":{"dependencies.html":{}},"body":{}}],["pages/home/hom",{"_index":89,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["pages/pagina",{"_index":91,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["paginaunopag",{"_index":90,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["para",{"_index":13,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["param",{"_index":96,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["paramet",{"_index":35,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["plugin",{"_index":160,"title":{},"body":{"dependencies.html":{}}}],["promis",{"_index":51,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["promiselik",{"_index":67,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["properti",{"_index":18,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["provid",{"_index":9,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["providerunoprovid",{"_index":1,"title":{"injectables/ProviderUnoProvider.html":{}},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{}}}],["public",{"_index":19,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["que",{"_index":10,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["rc.3",{"_index":156,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":74,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["res.key",{"_index":104,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["result",{"_index":119,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["return",{"_index":50,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["rxj",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["screen",{"_index":149,"title":{},"body":{"dependencies.html":{}}}],["se",{"_index":11,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["showload",{"_index":28,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["showload?):promis",{"_index":108,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["splashscreen",{"_index":169,"title":{},"body":{"dependencies.html":{}}}],["src/providers/provid",{"_index":5,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{}}}],["statement",{"_index":124,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":113,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["sw",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["tabl",{"_index":129,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":128,"title":{},"body":{"coverage.html":{}}}],["this.actualizarusuario(usuario",{"_index":105,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.arrayusuario",{"_index":73,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.database.database.ref('usuario",{"_index":81,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.database.list('usuario').valuechang",{"_index":100,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.usuarioprov.actualizarusuario(this.usuario",{"_index":42,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.usuarioprov.eliminar(this.usuario.key).then(r",{"_index":61,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.usuarioprov.guardarusuario(this.usuario).then(r",{"_index":65,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.usuarioprov.obtenerusuarios().subscribe(r",{"_index":72,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.usuarioref",{"_index":80,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.usuarioref.child(key).remove().then(r",{"_index":115,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.usuarioref.child(usuario.key).set(usuario).then(r",{"_index":111,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["this.usuarioref.push(usuario).then(r",{"_index":102,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["tipo",{"_index":32,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["todo",{"_index":70,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["toolbox",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["true).then(r",{"_index":43,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["type",{"_index":77,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{}}}],["ubicación",{"_index":79,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["un",{"_index":15,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["uno",{"_index":93,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["uno.t",{"_index":7,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{}}}],["uno.ts:107",{"_index":30,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["uno.ts:126",{"_index":53,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["uno.ts:26",{"_index":78,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["uno.ts:55",{"_index":68,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["uno.ts:80",{"_index":63,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["uno/pagina",{"_index":92,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["uno/provid",{"_index":6,"title":{},"body":{"injectables/ProviderUnoProvider.html":{},"coverage.html":{}}}],["usa",{"_index":12,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["usuario",{"_index":16,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["usuario.key",{"_index":103,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["usuarioprov",{"_index":106,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["usuarioref",{"_index":20,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["webview",{"_index":167,"title":{},"body":{"dependencies.html":{}}}],["whitelist",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["ye",{"_index":39,"title":{},"body":{"injectables/ProviderUnoProvider.html":{}}}],["zone.j",{"_index":182,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ProviderUnoProvider.html":{"url":"injectables/ProviderUnoProvider.html","title":"injectable - ProviderUnoProvider","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ProviderUnoProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/provider-uno/provider-uno.ts\n        \n\n            \n                Description\n            \n            \n                Provider que se usa para guardar/eliminar/actualizar un usuario\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                usuarioRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                actualizarUsuario\n                            \n                            \n                                    Public\n                                eliminar\n                            \n                            \n                                    Public\n                                guardarUsuario\n                            \n                            \n                                    Public\n                                obtenerUsuarios\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            actualizarUsuario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        actualizarUsuario(usuario: , showLoad?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/provider-uno/provider-uno.ts:107\n                            \n                        \n\n\n                \n                    \n                            Actualiza un tipo usuario en firebase\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        usuario\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                datos Usuario\n\n                                                        \n                                                \n                                                \n                                                        showLoad\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Como se usa\n{\nthis.usuarioProv.actualizarUsuario(this.usuario, true).then(res =&gt; {\n});\n}\n                                        \n                                        \n                                            Datos de clase Usuario\n{\nnombre: nombre del usuario\napellido: apellido del usuario\n}\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            eliminar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        eliminar(key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/provider-uno/provider-uno.ts:126\n                            \n                        \n\n\n                \n                    \n                            Elimina el usuario que coincida con la key\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                id del usuario\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Como se usa\nthis.usuarioProv.eliminar(this.usuario.key).then(res =&gt; {\n});\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            guardarUsuario\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        guardarUsuario(usuario: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/provider-uno/provider-uno.ts:80\n                            \n                        \n\n\n                \n                    \n                            Guarda un tipo usuario en firebase\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        usuario\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                datos Usuario\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            Como se usa\n{\nthis.usuarioProv.guardarUsuario(this.usuario).then(res =&gt; {\n});\n}\n                                        \n                                        \n                                            Datos de clase Usuario\n{\nkey : aleatoria de firebase;\nnombre: nombre del usuario\napellido: apellido del usuario\n}\n                                        \n                            \n                            \n                                Returns :     PromiseLike\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            obtenerUsuarios\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        obtenerUsuarios()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/provider-uno/provider-uno.ts:55\n                            \n                        \n\n\n                \n                    \n                            Devuelve todos los usuarios en firebase\n\n\n                            \n                                    Example :\n                                        \n                                            Como se usa\n{\nthis.usuarioProv.obtenerUsuarios().subscribe(res =&gt; {\nthis.arrayUsuarios = res;\n}\n                                        \n                                        \n                                            Datos Usuario\n{\nkey: id de firebase,\nnombre: nombre del usuario\napellido&quot;: apellido del usuario\n}\n                                        \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            usuarioRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        usuarioRef:     DatabaseReference\n\n                    \n                \n                    \n                        \n                            Type :     DatabaseReference\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/provider-uno/provider-uno.ts:26\n                            \n                        \n\n                \n                    \n                        Ubicación en Firebase para usuario.\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        usuarioRef\n                                                        \n                                                                Ubicación en firebase\n\n                                                        \n                                                \n                                      \n                                  \n                                  Example :\n                                      \n                                          Como se usa\nthis.usuarioRef = this.database.database.ref('usuario');\n\n                                      \n                          \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AngularFireDatabase, DatabaseReference } from 'angularfire2/database';\nimport { HomePage } from '../../pages/home/home';\nimport { PaginaUnoPage } from '../../pages/pagina-uno/pagina-uno';\n\n  /**\n * Provider que se usa para guardar/eliminar/actualizar un usuario\n */\n@Injectable()\nexport class ProviderUnoProvider {\n\n\n  /**\n   * Ubicación en Firebase para usuario.\n   * @param {DatabaseReference} usuarioRef Ubicación en firebase\n   * \n   * \n   * \n   * \n   * @example Como se usa\n   * this.usuarioRef = this.database.database.ref('usuario');\n   * \n   */\n\n  public usuarioRef: DatabaseReference;\n/**\n * \n * @ignore\n */\n  constructor(public database: AngularFireDatabase) {\n    this.usuarioRef = this.database.database.ref('usuario');\n  }\n\n\n\n  /**\n   * Devuelve todos los usuarios en firebase\n   * \n   * \n   * \n   * @example Como se usa\n   * {\n   * this.usuarioProv.obtenerUsuarios().subscribe(res => {\n   * this.arrayUsuarios = res;\n   * }\n   * \n   * @example Datos Usuario\n   * {\n   *       key: id de firebase,\n   *       nombre: nombre del usuario\n   *       apellido\": apellido del usuario\n   * }\n   */\n  public obtenerUsuarios() {\n    return this.database.list('usuario').valueChanges();\n  }\n\n\n\n    /**\n   * Guarda un tipo usuario en firebase\n   * @param {Usuario} usuario datos Usuario\n   * \n   * @example Como se usa\n   * {\n   * this.usuarioProv.guardarUsuario(this.usuario).then(res => {\n   * });\n   * }\n   * \n   * @example Datos de clase Usuario\n   *     {\n   *       key : aleatoria de firebase;\n   *       nombre: nombre del usuario\n   *       apellido: apellido del usuario\n   *     }\n   * \n   * \n   */\n  public guardarUsuario(usuario):PromiseLike {\n    return this.usuarioRef.push(usuario).then(res => {\n      usuario.key = res.key;\n      this.actualizarUsuario(usuario);\n    });\n  }\n\n\n    /**\n   * Actualiza un tipo usuario en firebase\n   * @param {Usuario} usuario datos Usuario\n   * @param {ProviderUnoProvider} usuarioProv instancia del provider usuario\n   * \n   * \n   * @example Como se usa\n   * {\n   * this.usuarioProv.actualizarUsuario(this.usuario, true).then(res => {\n   * });\n   * }\n   * \n   * @example Datos de clase Usuario\n   *     {\n   *       nombre: nombre del usuario\n   *       apellido: apellido del usuario\n   *     }\n   * \n   */\n  public actualizarUsuario(usuario, showLoad?):Promise {\n    let obj = {};\n    obj[usuario.key] = usuario;\n    return this.usuarioRef.child(usuario.key).set(usuario).then(res => { }).catch(err => { });\n  }\n\n\n  /**\n   * Elimina el usuario que coincida con la key\n   * @param {string} key id del usuario\n   * @param {ProviderUnoProvider} usuarioProv instancia del provider usuario\n   * \n   * \n   * @example Como se usa\n   * this.usuarioProv.eliminar(this.usuario.key).then(res => {\n   * });\n   * \n   * \n   */\n  public eliminar(key):Promise {\n    return this.usuarioRef.child(key).remove().then(res => {\n    }).catch(err => {\n      console.log(\"no se elimino msj\");\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/providers/provider-uno/provider-uno.ts\n            \n            \n                injectable\n            \n            \n                ProviderUnoProvider\n            \n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 5.2.11\n        \n            @angular/common : 5.2.11\n        \n            @angular/compiler : 5.2.11\n        \n            @angular/compiler-cli : 5.2.11\n        \n            @angular/core : 5.2.11\n        \n            @angular/forms : 5.2.11\n        \n            @angular/http : 5.2.11\n        \n            @angular/platform-browser : 5.2.11\n        \n            @angular/platform-browser-dynamic : 5.2.11\n        \n            @ionic-native/core : 4.8.0\n        \n            @ionic-native/in-app-browser : ^4.9.0\n        \n            @ionic-native/splash-screen : 4.8.0\n        \n            @ionic-native/status-bar : 4.8.0\n        \n            @ionic/storage : 2.1.3\n        \n            angularfire2 : 5.0.0-rc.3\n        \n            cordova-android : 7.0.0\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-inappbrowser : ^3.0.0\n        \n            cordova-plugin-ionic-keyboard : ^2.0.5\n        \n            cordova-plugin-ionic-webview : ^1.1.19\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            firebase : 4.6.0\n        \n            ionic-angular : 3.9.2\n        \n            ionicons : 3.0.0\n        \n            rxjs : 5.5.11\n        \n            sw-toolbox : 3.6.0\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
